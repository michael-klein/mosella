{"version":3,"file":"mosella.umd.js","sources":["../src/stream.js","../src/operator.js","../src/filter.js","../src/pipe.js","../src/map.js","../src/sum.js","../src/merge.js","../src/combine.js"],"sourcesContent":["export const STREAM = Symbol(\"stream\");\r\nexport const STOP = Symbol(\"stop\");\r\nexport const stream = currentValue => {\r\n  const listeners = [];\r\n  let queuedValues = [];\r\n  if (currentValue !== undefined) {\r\n    queuedValues.push(currentValue);\r\n  }\r\n  let emitPromise = Promise.resolve();\r\n\r\n  const emit = (value, listeners) => {\r\n    listeners = [...listeners];\r\n    const doEmit = () => {\r\n      if (listeners.length > 0) {\r\n        const result = listeners.shift()(value);\r\n        if (result instanceof Promise) {\r\n          return result.then(() => doEmit());\r\n        }\r\n        return doEmit();\r\n      }\r\n    };\r\n    return doEmit();\r\n  };\r\n\r\n  const stream$ = function(value) {\r\n    if (currentValue !== STOP) {\r\n      if (value !== undefined) {\r\n        currentValue = value;\r\n      }\r\n      if (listeners.length > 0) {\r\n        emitPromise = emitPromise.then(() => emit(value, listeners));\r\n      } else {\r\n        queuedValues.push(value);\r\n      }\r\n      if (value === STOP) {\r\n        listeners.length = 0;\r\n        queuedValues.length = 0;\r\n      }\r\n    }\r\n    return currentValue;\r\n  };\r\n\r\n  stream$.on = listener => {\r\n    if (currentValue !== STOP) {\r\n      listeners.push(listener);\r\n      if (queuedValues.length > 0) {\r\n        queuedValues = queuedValues.filter(value => {\r\n          emitPromise = emitPromise.then(() => emit(value, listeners));\r\n          return false;\r\n        });\r\n      }\r\n      return () => {\r\n        listeners.splice(listeners.indexOf(listener), 1);\r\n      };\r\n    }\r\n  };\r\n\r\n  stream$.stop = () => {\r\n    stream$(STOP);\r\n  };\r\n\r\n  stream$.hasListeners = () => listeners.length > 0;\r\n\r\n  stream$.is = STREAM;\r\n\r\n  return stream$;\r\n};\r\n","import { stream, STREAM, STOP } from \"./stream\";\r\n\r\nconst wrapStream = (op, args, streamIn$) => {\r\n  const stream$ = streamIn$ || args.pop();\r\n  const valueStream$ = stream();\r\n  let outStream$;\r\n  stream$.on(value => {\r\n    if (value !== STOP) {\r\n      valueStream$(value);\r\n    } else {\r\n      outStream$(value);\r\n    }\r\n  });\r\n  outStream$ = op.apply(op, [...args, valueStream$]);\r\n  return outStream$;\r\n};\r\n\r\nexport const operator = op => {\r\n  return (...args) => {\r\n    const lastArg = args[args.length - 1];\r\n    if (typeof lastArg === \"function\" && lastArg.is === STREAM) {\r\n      return wrapStream(op, args);\r\n    } else {\r\n      return stream$ => wrapStream(op, args, stream$);\r\n    }\r\n  };\r\n};\r\n","import { operator } from \"./operator\";\r\nimport { stream } from \"./stream\";\r\nexport const filter = operator((predicate, stream$) => {\r\n  const newStream$ = stream();\r\n  stream$.on(value => {\r\n    let shouldEmit = predicate(value);\r\n    if (shouldEmit instanceof Promise) {\r\n      shouldEmit.then(v => {\r\n        if (shouldEmit) {\r\n          newStream$(value);\r\n        }\r\n      });\r\n    } else {\r\n      if (shouldEmit) {\r\n        newStream$(value);\r\n      }\r\n    }\r\n    return shouldEmit;\r\n  });\r\n  return newStream$;\r\n});\r\n","import { operator } from \"./operator\";\r\nexport const pipe = operator((...operators) => {\r\n  let stream$ = operators.pop();\r\n  for (const operator of operators) {\r\n    stream$ = operator(stream$);\r\n  }\r\n  return stream$;\r\n});\r\n","import { operator } from \"./operator\";\r\nimport { stream } from \"./stream\";\r\nexport const map = operator((cb, stream$) => {\r\n  const newStream$ = stream();\r\n  stream$.on(value => {\r\n    let mappedValue = cb.apply(cb, [value]);\r\n    if (mappedValue instanceof Promise) {\r\n      mappedValue.then(v => newStream$(v));\r\n    } else {\r\n      newStream$(mappedValue);\r\n    }\r\n    return mappedValue;\r\n  });\r\n  return newStream$;\r\n});\r\n","import { map } from \"./map\";\n\nexport const sum = map(function(value) {\n  if (this.sum === undefined) {\n    this.sum = 0;\n  }\n  return (this.sum += value);\n});\n","import { stream } from \"./stream\";\nexport const merge = (...streams$) => {\n  const newStream$ = stream();\n  for (const stream$ of streams$) {\n    stream$.on(value => newStream$(value));\n  }\n  return newStream$;\n};\n","import { stream } from \"./stream\";\nexport const combine = (...streams$) => {\n  const values = Array(streams$.length).fill(undefined);\n  const newStream$ = stream();\n  streams$.forEach((stream$, index) => {\n    stream$.on(value => {\n      values[index] = value;\n      newStream$(values);\n    });\n  });\n  return newStream$;\n};\n"],"names":["const","STREAM","Symbol","STOP","stream","currentValue","listeners","queuedValues","undefined","push","emitPromise","Promise","resolve","emit","value","doEmit","length","result","shift","then","stream$","on","listener","filter","splice","indexOf","stop","hasListeners","is","wrapStream","op","args","streamIn$","outStream$","pop","valueStream$","apply","operator","lastArg","predicate","newStream$","shouldEmit","v","pipe","operators","map","cb","mappedValue","sum","this","streams$","values","Array","fill","forEach","index"],"mappings":"6KAAOA,IAAMC,EAASC,OAAO,UAChBC,EAAOD,OAAO,QACdE,WAASC,OACdC,EAAY,GACdC,EAAe,QACEC,IAAjBH,GACFE,EAAaE,KAAKJ,OAEhBK,EAAcC,QAAQC,UAEpBC,WAAQC,EAAOR,GACnBA,EAAY,UAAIA,OACVS,gBACAT,EAAUU,OAAS,EAAG,KAClBC,EAASX,EAAUY,OAAVZ,CAAkBQ,UAC7BG,aAAkBN,QACbM,EAAOE,uBAAWJ,MAEpBA,aAGJA,KAGHK,EAAU,SAASN,UACnBT,IAAiBF,SACLK,IAAVM,IACFT,EAAeS,GAEbR,EAAUU,OAAS,EACrBN,EAAcA,EAAYS,uBAAWN,EAAKC,EAAOR,KAEjDC,EAAaE,KAAKK,GAEhBA,IAAUX,IACZG,EAAUU,OAAS,EACnBT,EAAaS,OAAS,IAGnBX,UAGTe,EAAQC,YAAKC,MACPjB,IAAiBF,SACnBG,EAAUG,KAAKa,GACXf,EAAaS,OAAS,IACxBT,EAAeA,EAAagB,gBAAOT,UACjCJ,EAAcA,EAAYS,uBAAWN,EAAKC,EAAOR,MAC1C,gBAITA,EAAUkB,OAAOlB,EAAUmB,QAAQH,GAAW,KAKpDF,EAAQM,gBACNN,EAAQjB,IAGViB,EAAQO,+BAAqBrB,EAAUU,OAAS,GAEhDI,EAAQQ,GAAK3B,EAENmB,GC/DHS,WAAcC,EAAIC,EAAMC,OAGxBC,EAFEb,EAAUY,GAAaD,EAAKG,MAC5BC,EAAe/B,WAErBgB,EAAQC,YAAGP,GACLA,IAAUX,EACZgC,EAAarB,GAEbmB,EAAWnB,KAGfmB,EAAaH,EAAGM,MAAMN,EAAQC,UAAMI,MAIzBE,WAAWP,gFAEdQ,EAAUP,EAAKA,EAAKf,OAAS,SACZ,mBAAZsB,GAA0BA,EAAQV,KAAO3B,EAC3C4B,EAAWC,EAAIC,YAEfX,UAAWS,EAAWC,EAAIC,EAAMX,MCrBhCG,EAASc,WAAUE,EAAWnB,OACnCoB,EAAapC,WACnBgB,EAAQC,YAAGP,OACL2B,EAAaF,EAAUzB,UACvB2B,aAAsB9B,QACxB8B,EAAWtB,cAAKuB,GACVD,GACFD,EAAW1B,KAIX2B,GACFD,EAAW1B,GAGR2B,IAEFD,IClBIG,EAAON,4EACdjB,EAAUwB,EAAUV,YACDU,kBACrBxB,GAAUiB,QAASjB,UAEdA,ICJIyB,EAAMR,WAAUS,EAAI1B,OACzBoB,EAAapC,WACnBgB,EAAQC,YAAGP,OACLiC,EAAcD,EAAGV,MAAMU,EAAI,CAAChC,WAC5BiC,aAAuBpC,QACzBoC,EAAY5B,cAAKuB,UAAKF,EAAWE,KAEjCF,EAAWO,GAENA,IAEFP,ICXIQ,EAAMH,EAAI,SAAS/B,eACbN,IAAbyC,KAAKD,WACFA,IAAM,GAELC,KAAKD,KAAOlC,6HCJd0B,EAAapC,UACG8C,uBACZ7B,YAAGP,UAAS0B,EAAW1B,YAE1B0B,wGCJDW,EAASC,MAAMF,EAASlC,QAAQqC,UAAK7C,GACrCgC,EAAapC,WACnB8C,EAASI,iBAASlC,EAASmC,GACzBnC,EAAQC,YAAGP,GACTqC,EAAOI,GAASzC,EAChB0B,EAAWW,OAGRX"}